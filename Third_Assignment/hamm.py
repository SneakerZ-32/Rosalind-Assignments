
# this program compares two dna strings to find how many point mutations there are.
s = "TAGTCCTGTGCATCCTAAGGGTTGGTTTGTACCTCGCTGTTGATCTTCGTAACGCACGGTGAACGCCGCCTTCGGCTCCACGCTTGCTAGAAGGAAGATGCCCAATCGAAGGTCTGGACCGAGCGACGAACTAGTATCTAGTGGATGAATGTACAGGAGTGACATAGTCGACAGTGAGATCCAAACCAAGCCAGGAACGGCACAACTCGAACTCCAACCCAGGTTAATTGGTCGTGTGCAAATAACTTCTACTGGCGATTAAATTCTGATGCCGTAGGAGGGGACGAAAGCCGCTAGGAATCGGGTGTATAATCGTTTATATCGTAACGGATAAACGCCGCGACACACTAGGCCCATAAAACAGGCCGTGTCACGTCGGTTAAGTAAACTAAATGGGGTAAGTAGGTCATACGCCCCCCAGGAAAACGCGATCCCCAAGAAAAGCTCATTGCTCCATGCGCCGCACTAGGGACACGATACCTCTACCTACCTAACATTTGTCCGCTTGTTCAGTTAAACCCGACGGTCCTTCTCTGAGTCCATCTAGGCAGCTATGTGGCTTCTCGGCTGCTAAGAGTTGACTGCATCGGCTATATTGTACGTGCTTAAAGCACTGTTTAAGTAGGAATAAGACACTTAGGTCGCACTCGTAAGTGACCGCCTGGTCCTTGGACTGTTACCTCTGTGCAGTTGCGTGTAAAATCGAGGTTCCAGTAACAGACCCCTCATTCACGAACTTGTAGCGATTTAAATCTTGGCCATTATTGCTGGGCGCGATATCCGAGGCAAATCGTGACAGCCGGTCGTCGGAACGGTCGTTTCGGCATGTGCGCACATATGCGGCCAGATGTCCTTGTCAAGCCAATACATGAATGCAGCGTACTCGACCCGCGGCCAGAT"  
#Input here the first dna string
t = "GATTTCTCTTCATACTTACGCTTACTCCCTAGTCAGCACTCGTTATTAGTACCATGCTGAGTAAGCTACAGGAGGAACGGGTCTTGGGAGTCGAAATATTCTCTATCGCAGAGCTGTACCCAGCAACGAATGTATAACGTCCCTGGGAGCTCTTTGGGCAAGGAAGACCGGCATTAATCGGGAGACCAATCCAATGAGTGCCGTCTAGAACCTCACATCCCGATTACCCGTTCAGGCTCCGCAAGGCAGTTCCTAAATCAACTTTCTCCTAGAGGATCATAGCCACTAAGCCCCCCTGATTCCGGCAGCCCCACGATCCCAGCGGGACGTATAACCAGCGTTGCACAACACTCGCTGACCACGGGCGCCGACTCATGGAGGCAGGAAGCAAAGTACAACTGATAGGTAGAACGCTCCTCAGGACAGCGCCATCCCGAACATAAGTTCATCGCCCCACGTGACCCATTATGAACACCATACAGAAGAGAAATCAGCTATTGACCGCTTGATGGTCTGCCACCAGGCAACCGTTTCTGTGCACTTCTACTAGGCAAGTGGAGTCCTTGACTGATTAGCTAGAAGTAGACGGGTAAAAGGATTATATTTTCGGCCCCTGTTGAAGGTGGACTAAGCGCTCTACGTTAGACCCGTCGGTGTGCGACTAAGAGTTGGTTTAGAAGGTCTGGAACGCCGCGTACAAATTCGCGGTTCCAGTAGGAGGACCAACTTGTAAAAATTTGTAACGACTACACGTTGAAGCATAATTGGGCGCCGTAATCGACGACCCAAAGGGTGACGTGTTAGAGTCAGAAAGACCTGTTTTCCACCTGGGTACACTCCCCTTCTGGCGTTTGTCGCAAGGTAATGCTGTAACCCGGACACCTCAACCTGCTGAATGAC" 
#Input here the second dna string

'''
s_list = list (s)
t_list = list (t)
counter = len(s)
'''
def point_mutations(s,t):

    point_mutations = 0


    for schar,tchar in zip(s,t):
        if schar != tchar:
            point_mutations += 1
    print (point_mutations, "Point mutations found!")

point_mutations(s,t)
#EUREKA!!! zip() was the function I was looking for to run the two string in parallel!!

# the ones below are failed attempts at solving the problem
'''while counter > 0:
    i = 0

    if s_list[0+i] != t_list[0+i]:
        point_mutations += 1
    i += 1
    counter += -1

print (point_mutations)
i = 0
while counter > 0:
    counter -= 1
    i += 1
print (s_list[i])
print (t_list[i]) '''
